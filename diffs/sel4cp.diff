diff --git a/build_sdk.py b/build_sdk.py
index 34f2663..cd0d93a 100644
--- a/build_sdk.py
+++ b/build_sdk.py
@@ -66,97 +66,97 @@ class ConfigInfo:
 
 
 SUPPORTED_BOARDS = (
-    BoardInfo(
-        name="tqma8xqp1gb",
-        arch=BoardArch.AARCH64,
-        gcc_flags="GCC_CPU=cortex-a35",
-        loader_link_address=0x80280000,
-        kernel_options = {
-            "KernelPlatform": "tqma8xqp1gb",
-            "KernelIsMCS": True,
-            "KernelArmExportPCNTUser": True,
-        },
-        examples = {
-            "ethernet": Path("example/tqma8xqp1gb/ethernet")
-        }
-    ),
-    BoardInfo(
-        name="zcu102",
-        arch=BoardArch.AARCH64,
-        gcc_flags="GCC_CPU=cortex-a53",
-        loader_link_address=0x40000000,
-        kernel_options = {
-            "KernelPlatform": "zynqmp",
-            "KernelARMPlatform": "zcu102",
-            "KernelIsMCS": True,
-            "KernelArmExportPCNTUser": True,
-        },
-        examples = {
-            "hello": Path("example/zcu102/hello")
-        }
-    ),
-    BoardInfo(
-        name="imx8mq_evk",
-        arch=BoardArch.AARCH64,
-        gcc_flags="GCC_CPU=cortex-a53",
-        loader_link_address=0x41000000,
-        kernel_options = {
-            "KernelPlatform": "imx8mq-evk",
-            "KernelIsMCS": True,
-            "KernelArmExportPCNTUser": True,
-        },
-        examples = {}
-    ),
-    BoardInfo(
-        name="imx8mm_evk",
-        arch=BoardArch.AARCH64,
-        gcc_flags="GCC_CPU=cortex-a53",
-        loader_link_address=0x41000000,
-        kernel_options = {
-            "KernelPlatform": "imx8mm-evk",
-            "KernelIsMCS": True,
-            "KernelArmExportPCNTUser": True,
-        },
-        examples = {}
-    ),
-    BoardInfo(
-        name="imx8mm_evk_2_cores",
-        arch=BoardArch.AARCH64,
-        gcc_flags="GCC_CPU=cortex-a53",
-        loader_link_address=0x41000000,
-        kernel_options = {
-            "KernelPlatform": "imx8mm-evk",
-            "KernelIsMCS": True,
-            "KernelArmExportPCNTUser": True,
-            "KernelMaxNumNodes": 2,
-        },
-        examples = {}
-    ),
-    BoardInfo(
-        name="imx8mm_evk_4_cores",
-        arch=BoardArch.AARCH64,
-        gcc_flags="GCC_CPU=cortex-a53",
-        loader_link_address=0x41000000,
-        kernel_options = {
-            "KernelPlatform": "imx8mm-evk",
-            "KernelIsMCS": True,
-            "KernelArmExportPCNTUser": True,
-            "KernelMaxNumNodes": 4,
-        },
-        examples = {}
-    ),
-    BoardInfo(
-        name="qemu_arm_virt",
-        arch=BoardArch.AARCH64,
-        gcc_flags="GCC_CPU=cortex-a53",
-        loader_link_address=0x70000000,
-        kernel_options = {
-            "KernelPlatform": "qemu-arm-virt",
-            "KernelIsMCS": True,
-            "KernelArmExportPCNTUser": True,
-        },
-        examples = {}
-    ),
+#    BoardInfo(
+#        name="tqma8xqp1gb",
+#        arch=BoardArch.AARCH64,
+#        gcc_flags="GCC_CPU=cortex-a35",
+#        loader_link_address=0x80280000,
+#        kernel_options = {
+#            "KernelPlatform": "tqma8xqp1gb",
+#            "KernelIsMCS": True,
+#            "KernelArmExportPCNTUser": True,
+#        },
+#        examples = {
+#            "ethernet": Path("example/tqma8xqp1gb/ethernet")
+#        }
+#    ),
+#    BoardInfo(
+#        name="zcu102",
+#        arch=BoardArch.AARCH64,
+#        gcc_flags="GCC_CPU=cortex-a53",
+#        loader_link_address=0x40000000,
+#        kernel_options = {
+#            "KernelPlatform": "zynqmp",
+#            "KernelARMPlatform": "zcu102",
+#            "KernelIsMCS": True,
+#            "KernelArmExportPCNTUser": True,
+#        },
+#        examples = {
+#            "hello": Path("example/zcu102/hello")
+#        }
+#    ),
+#    BoardInfo(
+#        name="imx8mq_evk",
+#        arch=BoardArch.AARCH64,
+#        gcc_flags="GCC_CPU=cortex-a53",
+#        loader_link_address=0x41000000,
+#        kernel_options = {
+#            "KernelPlatform": "imx8mq-evk",
+#            "KernelIsMCS": True,
+#            "KernelArmExportPCNTUser": True,
+#        },
+#        examples = {}
+#    ),
+#    BoardInfo(
+#        name="imx8mm_evk",
+#        arch=BoardArch.AARCH64,
+#        gcc_flags="GCC_CPU=cortex-a53",
+#        loader_link_address=0x41000000,
+#        kernel_options = {
+#            "KernelPlatform": "imx8mm-evk",
+#            "KernelIsMCS": True,
+#            "KernelArmExportPCNTUser": True,
+#        },
+#        examples = {}
+#    ),
+#    BoardInfo(
+#        name="imx8mm_evk_2_cores",
+#        arch=BoardArch.AARCH64,
+#        gcc_flags="GCC_CPU=cortex-a53",
+#        loader_link_address=0x41000000,
+#        kernel_options = {
+#            "KernelPlatform": "imx8mm-evk",
+#            "KernelIsMCS": True,
+#            "KernelArmExportPCNTUser": True,
+#            "KernelMaxNumNodes": 2,
+#        },
+#        examples = {}
+#    ),
+#    BoardInfo(
+#        name="imx8mm_evk_4_cores",
+#        arch=BoardArch.AARCH64,
+#        gcc_flags="GCC_CPU=cortex-a53",
+#        loader_link_address=0x41000000,
+#        kernel_options = {
+#            "KernelPlatform": "imx8mm-evk",
+#            "KernelIsMCS": True,
+#            "KernelArmExportPCNTUser": True,
+#            "KernelMaxNumNodes": 4,
+#        },
+#        examples = {}
+#    ),
+#    BoardInfo(
+#        name="qemu_arm_virt",
+#        arch=BoardArch.AARCH64,
+#        gcc_flags="GCC_CPU=cortex-a53",
+#        loader_link_address=0x70000000,
+#        kernel_options = {
+#            "KernelPlatform": "qemu-arm-virt",
+#            "KernelIsMCS": True,
+#            "KernelArmExportPCNTUser": True,
+#        },
+#        examples = {}
+#    ),
     BoardInfo(
         name="qemu_arm_virt_hyp",
         arch=BoardArch.AARCH64,
@@ -176,99 +176,99 @@ SUPPORTED_BOARDS = (
         },
         examples = {}
     ),
-    BoardInfo(
-        name="qemu_arm_virt_2_cores",
-        arch=BoardArch.AARCH64,
-        gcc_flags="GCC_CPU=cortex-a53",
-        loader_link_address=0x70000000,
-        kernel_options = {
-            "KernelPlatform": "qemu-arm-virt",
-            "KernelIsMCS": True,
-            "KernelArmExportPCNTUser": True,
-            "KernelMaxNumNodes": 2,
-        },
-        examples = {}
-    ),
-    BoardInfo(
-        name="odroidc2",
-        arch=BoardArch.AARCH64,
-        gcc_flags="GCC_CPU=cortex-a53",
-        loader_link_address=0x20000000,
-        kernel_options = {
-            "KernelPlatform": "odroidc2",
-            "KernelIsMCS": True,
-            "KernelArmExportPCNTUser": True,
-            "KernelArmHypervisorSupport": True,
-        },
-        examples = {}
-    ),
-    BoardInfo(
-        name="rpi3b",
-        arch=BoardArch.AARCH64,
-        gcc_flags="GCC_CPU=cortex-a53",
-        loader_link_address=0x10000000,
-        kernel_options = {
-            "KernelPlatform": "bcm2837",
-            "KernelARMPlatform": "rpi3",
-            "KernelIsMCS": True,
-            # The kernel will default to AARCH32, which is why we specify AARCH64
-            "KernelSel4Arch": "aarch64",
-        },
-        examples = {}
-    ),
-    # For RISC-V the link address for the seL4CP loader is dependent on the
-    # previous loader. Currently for RISC-V platforms we use OpenSBI which
-    # is placed at the start of memory and since we use FW_PAYLOAD, it places
-    # the loader at fixed location of 2MiB after the start of memory. If you
-    # were to use a different SBI implementation or not use FW_PAYLOAD with
-    # OpenSBI, you will most likely have to change the loader_link_address.
-    BoardInfo(
-        name="spike",
-        arch=BoardArch.RISCV64,
-        gcc_flags = "",
-        loader_link_address=0x80200000,
-        kernel_options = {
-            "KernelIsMCS": True,
-            "KernelPlatform": "spike",
-        },
-        examples = {
-            "hello": Path("example/spike/hello")
-        }
-    ),
-    BoardInfo(
-        name="hifive_unleashed",
-        arch=BoardArch.RISCV64,
-        gcc_flags = "",
-        loader_link_address=0x80200000,
-        kernel_options = {
-            "KernelIsMCS": True,
-            "KernelPlatform": "hifive",
-        },
-        examples = {}
-    ),
-    BoardInfo(
-        name="qemu_riscv_virt",
-        arch=BoardArch.RISCV64,
-        gcc_flags = "",
-        loader_link_address=0x80200000,
-        kernel_options = {
-            "KernelIsMCS": True,
-            "KernelPlatform": "qemu-riscv-virt",
-        },
-        examples = {}
-    ),
-    BoardInfo(
-        name="qemu_riscv_virt_hyp",
-        arch=BoardArch.RISCV64,
-        gcc_flags = "",
-        loader_link_address=0x80200000,
-        kernel_options = {
-            "KernelIsMCS": True,
-            "KernelPlatform": "qemu-riscv-virt",
-            "KernelRiscVHypervisorSupport": True,
-        },
-        examples = {}
-    ),
+#    BoardInfo(
+#        name="qemu_arm_virt_2_cores",
+#        arch=BoardArch.AARCH64,
+#        gcc_flags="GCC_CPU=cortex-a53",
+#        loader_link_address=0x70000000,
+#        kernel_options = {
+#            "KernelPlatform": "qemu-arm-virt",
+#            "KernelIsMCS": True,
+#            "KernelArmExportPCNTUser": True,
+#            "KernelMaxNumNodes": 2,
+#        },
+#        examples = {}
+#    ),
+#    BoardInfo(
+#        name="odroidc2",
+#        arch=BoardArch.AARCH64,
+#        gcc_flags="GCC_CPU=cortex-a53",
+#        loader_link_address=0x20000000,
+#        kernel_options = {
+#            "KernelPlatform": "odroidc2",
+#            "KernelIsMCS": True,
+#            "KernelArmExportPCNTUser": True,
+#            "KernelArmHypervisorSupport": True,
+#        },
+#        examples = {}
+#    ),
+#    BoardInfo(
+#        name="rpi3b",
+#        arch=BoardArch.AARCH64,
+#        gcc_flags="GCC_CPU=cortex-a53",
+#        loader_link_address=0x10000000,
+#        kernel_options = {
+#            "KernelPlatform": "bcm2837",
+#            "KernelARMPlatform": "rpi3",
+#            "KernelIsMCS": True,
+#            # The kernel will default to AARCH32, which is why we specify AARCH64
+#            "KernelSel4Arch": "aarch64",
+#        },
+#        examples = {}
+#    ),
+#    # For RISC-V the link address for the seL4CP loader is dependent on the
+#    # previous loader. Currently for RISC-V platforms we use OpenSBI which
+#    # is placed at the start of memory and since we use FW_PAYLOAD, it places
+#    # the loader at fixed location of 2MiB after the start of memory. If you
+#    # were to use a different SBI implementation or not use FW_PAYLOAD with
+#    # OpenSBI, you will most likely have to change the loader_link_address.
+#    BoardInfo(
+#        name="spike",
+#        arch=BoardArch.RISCV64,
+#        gcc_flags = "",
+#        loader_link_address=0x80200000,
+#        kernel_options = {
+#            "KernelIsMCS": True,
+#            "KernelPlatform": "spike",
+#        },
+#        examples = {
+#            "hello": Path("example/spike/hello")
+#        }
+#    ),
+#    BoardInfo(
+#        name="hifive_unleashed",
+#        arch=BoardArch.RISCV64,
+#        gcc_flags = "",
+#        loader_link_address=0x80200000,
+#        kernel_options = {
+#            "KernelIsMCS": True,
+#            "KernelPlatform": "hifive",
+#        },
+#        examples = {}
+#    ),
+#    BoardInfo(
+#        name="qemu_riscv_virt",
+#        arch=BoardArch.RISCV64,
+#        gcc_flags = "",
+#        loader_link_address=0x80200000,
+#        kernel_options = {
+#            "KernelIsMCS": True,
+#            "KernelPlatform": "qemu-riscv-virt",
+#        },
+#        examples = {}
+#    ),
+#    BoardInfo(
+#        name="qemu_riscv_virt_hyp",
+#        arch=BoardArch.RISCV64,
+#        gcc_flags = "",
+#        loader_link_address=0x80200000,
+#        kernel_options = {
+#            "KernelIsMCS": True,
+#            "KernelPlatform": "qemu-riscv-virt",
+#            "KernelRiscVHypervisorSupport": True,
+#        },
+#        examples = {}
+#    ),
     # BoardInfo(
     #     name="qemu_riscv_virt_no_hyp_32",
     #     arch=BoardArch.RISCV32,
@@ -632,7 +632,7 @@ def main() -> None:
         test_tool()
         build_tool(tool_target)
 
-    build_doc(root_dir)
+    # build_doc(root_dir)
 
     build_dir = Path("build")
     for board in SUPPORTED_BOARDS:
